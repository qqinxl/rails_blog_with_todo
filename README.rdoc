== Welcome to Rails_Blog_With_TODO 

This's a simple blog engine with todo list management.

== DO Command

※START

  rails new blog-wep-app
  
  #Gemfile
  gem 'will_paginate'
  gem 'devise'
  gem 'thin'
  group :assets do
    gem 'web-app-theme', :git =>'git://github.com/pilu/web-app-theme.git'
  end
  
  bundle install
  rake db:create

※Home#Index

  rails g controller home index

  rm public/index.html

  #config/routes.rb
  root :to => "home#index"

※WEB-APP-THEME

  rails g web_app_theme:theme --app-name="Blog & Life"
  
  #app/views/layouts/application.html
    -  stylesheet_link_tag 'web_app_theme'
    +  stylesheet_link_tag 'application'
    -  javascript_include_tag :defaults, :cache => true	
    +  javascript_include_tag 'application'

  rails g web_app_theme:themed home --themed-type=text

  rails g web_app_theme:assets
  cp $(bundle show web-app-theme)/spec/dummy/public/images/* app/assets/images/web-app-theme/ -r
  # cp C:/Ruby193/lib/ruby/gems/1.9.1/bundler/gems/web-app-theme-b7310fe5001e/spec/dummy/public/images/* app/assets/images/web-app-theme/ -r

  #app/assets/stylesheets/web-app-theme/themes/default/style.css
    +.flash .error, .flash .error-list, .flash .alert
    + replace "/web-app-theme/themes/" to "/assets/web-app-theme/themes/"

※Devise
  
  rails g devise:install

  #config/initializers/devise.rb
    +  config.scoped_views = true

  rails g devise user

  #20121004045244_devise_create_users.rb
    +  t.string :name,              :null => false, :default => ""
    +  add_index :users, :name,                :unique => true

  rails g web_app_theme:theme sign --layout-type=sign --app-name="Blog & Life"
  rails g devise:views

  #config/application.rb
    +  config.to_prepare do
    +    Devise::SessionsController.layout "sign"
    +    Devise::RegistrationsController.layout "sign"
    +  end

  #devise_helper.rb
    module DeviseHelper
      def devise_error_messages!
        return [] if resource.errors.empty?
        return resource.errors
      end
    end

  #app/views/devise/sessions/new.html.erb <rewrite>
  #app/views/devise/registrations/new.html.erb <rewrite>
  #app/views/layouts/application.html.erb <rewrite>
  
  #app/models/user.rb
  attr_accessible :name
  
  rake db:migrate
  before_filter :authenticate_user!


※TODO List

  rails g scaffold admin/todo/tag name:string:uniq static:boolean:index user:references:index  
  rails g scaffold admin/todo/list name:string:uniq description:text starred:boolean:index due_date:datetime completed_at:datetime deleted_at:datetime todo_tag:references:index user:references:index
  
  #app/models/todo/tag/
  attr_accessible :user
  
  #Admin::ApplicationController
  class Admin::ApplicationController < ActionController::Base
    protect_from_forgery
    
    before_filter :authenticate_user!
    
    private
      def after_sign_out_path_for(resource_or_scope)
        scope = Devise::Mapping.find_scope!(resource_or_scope)
        send(:"new_#{scope}_session_path")
      end
  end
  
  rake db:migrate

※Blog

  rails g scaffold admin/blog subject:string content:text user:references
  rake db:migrate
  rails g web_app_theme:themed blogs --will-paginate

  #config/environment.rb
  +ActionView::Base.field_error_proc = Proc.new do |html_tag, instance|
    +  if html_tag =~ /<label/
    +    %|<div class="fieldWithErrors">#{html_tag} <span class="error">#{[instance.error_message].join(', ')}</span></div>|.html_safe
    +  else
    +    html_tag
    +  end
  +end
  
